{"ast":null,"code":"//import { json } from \"react-router-dom\";\nexport const getAllNotasService = async () => {\n  const response = await fetch(`${process.env.REACT_APP_BACK}/notes`);\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};\nexport const sigleNotaService = async (id, token) => {\n  const response = await fetch(`${process.env.REACT_APP_BACK}/notes/${id}`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    }\n  });\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};\nexport const registerUserservice = async _ref => {\n  let {\n    email,\n    password\n  } = _ref;\n  const response = await fetch(`${process.env.REACT_APP_BACK}/users`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n}; //error 404 not found al meter un user que existe o nuevo\n\nexport const logInUserService = async _ref2 => {\n  let {\n    email,\n    password\n  } = _ref2;\n  const response = await fetch(`${process.env.REACT_APP_BACK}/login`, {\n    method: \"POST\",\n    body: JSON.stringify({\n      email,\n      password\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};\nexport const geyMyUserDataService = async _ref3 => {\n  let {\n    token\n  } = _ref3;\n  const response = await fetch(`${process.env.REACT_APP_BACK}/users`, {\n    headers: {\n      Authorization: token\n    }\n  });\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};\nexport const getUserDataService = async id => {\n  const response = await fetch(`${process.env.REACT_APP_BACK}/users/${id}`);\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};\nexport const sendNotaService = async _ref4 => {\n  let {\n    data,\n    token\n  } = _ref4;\n  const response = await fetch(`${process.env.REACT_APP_BACK}/notes`, {\n    method: \"POST\",\n    body: data,\n    headers: {\n      Authorization: token,\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};\nexport const deleteNotaService = async _ref5 => {\n  let {\n    id,\n    token\n  } = _ref5;\n  const response = await fetch(`${process.env.REACT_APP_BACK}/notes/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      Authorization: token\n    }\n  });\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n}; //export const modifyNotaService = async ({ id, token }) => {\n//  const response = await fetch(`${process.env.REACT_APP_BACK}/notes/${id}`, {\n//    method: \"PUT\",\n//    headers: {\n//      Authorization: token,\n//    },\n//  });\n//  const json = await response.json();\n//  if (!response.ok) {\n//    throw new Error(json.message);\n//  }\n//};","map":{"version":3,"names":["getAllNotasService","response","fetch","process","env","REACT_APP_BACK","json","ok","Error","message","data","sigleNotaService","id","token","method","headers","Authorization","registerUserservice","email","password","body","JSON","stringify","logInUserService","geyMyUserDataService","getUserDataService","sendNotaService","deleteNotaService"],"sources":["/Users/usuario/Desktop/APP-Notes_Front/src/services/index.js"],"sourcesContent":["//import { json } from \"react-router-dom\";\n\nexport const getAllNotasService = async () => {\n  const response = await fetch(`${process.env.REACT_APP_BACK}/notes`);\n  const json = await response.json();\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};\n\nexport const sigleNotaService = async (id, token) => {\n  const response = await fetch(`${process.env.REACT_APP_BACK}/notes/${id}`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token,\n    },\n  });\n  const json = await response.json();\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n  return json.data;\n};\n\nexport const registerUserservice = async ({ email, password }) => {\n  const response = await fetch(`${process.env.REACT_APP_BACK}/users`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ email, password }),\n  });\n  const json = await response.json();\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n};\n\n//error 404 not found al meter un user que existe o nuevo\n\nexport const logInUserService = async ({ email, password }) => {\n  const response = await fetch(`${process.env.REACT_APP_BACK}/login`, {\n    method: \"POST\",\n    body: JSON.stringify({ email, password }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\n  const json = await response.json();\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n  return json.data;\n};\n\nexport const geyMyUserDataService = async ({ token }) => {\n  const response = await fetch(`${process.env.REACT_APP_BACK}/users`, {\n    headers: {\n      Authorization: token,\n    },\n  });\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n  return json.data;\n};\n\nexport const getUserDataService = async (id) => {\n  const response = await fetch(`${process.env.REACT_APP_BACK}/users/${id}`);\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n  return json.data;\n};\n\nexport const sendNotaService = async ({ data, token }) => {\n  const response = await fetch(`${process.env.REACT_APP_BACK}/notes`, {\n    method: \"POST\",\n    body: data,\n    headers: {\n      Authorization: token,\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  const json = await response.json();\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n  return json.data;\n};\n\nexport const deleteNotaService = async ({ id, token }) => {\n  const response = await fetch(`${process.env.REACT_APP_BACK}/notes/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      Authorization: token,\n    },\n  });\n\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n};\n\n//export const modifyNotaService = async ({ id, token }) => {\n//  const response = await fetch(`${process.env.REACT_APP_BACK}/notes/${id}`, {\n//    method: \"PUT\",\n//    headers: {\n//      Authorization: token,\n//    },\n//  });\n\n//  const json = await response.json();\n\n//  if (!response.ok) {\n//    throw new Error(json.message);\n//  }\n//};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}