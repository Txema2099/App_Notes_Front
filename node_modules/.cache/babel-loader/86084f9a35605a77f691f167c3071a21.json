{"ast":null,"code":"import { json } from \"react-router-dom\";\nexport const getAllNotasService = async () => {\n  const response = await fetch(`${process.env.REACT_APP_BACK}/notes`);\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};\nexport const sigleNotaService = async id => {\n  const response = await fetch(`${process.env.REACT_APP_BACK}/notes/${id}`);\n  const json = await response.json;\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};\nexport const registerUserservice = async _ref => {\n  let {\n    email,\n    password\n  } = _ref;\n  const response = await fetch(`${process.env.REACT_APP_BACK}/users`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n}; //error 404 not found al meter un user que existe o nuevo\n\nexport const logInUserService = async _ref2 => {\n  let {\n    email,\n    password\n  } = _ref2;\n  const response = await fetch(`${process.env.REACT_APP_BACK}/login`, {\n    method: \"POST\",\n    body: JSON.stringify({\n      email,\n      password\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};\nexport const geyMyUserDataService = async _ref3 => {\n  let {\n    token\n  } = _ref3;\n  const response = await fetch(`${process.env.REACT_APP_BACK}/users`, {\n    headers: {\n      Authorization: token\n    }\n  });\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n}; //Línea 2 (`${process.env.REACT_APP_BACK}/notes`)\n//mod\n//const response = await fetch(`${process.env.REACT_APP_BACK}/users`,\n//`${process.env.REACT_APP_BACKEND}/user/${id}/tweets`","map":{"version":3,"names":["json","getAllNotasService","response","fetch","process","env","REACT_APP_BACK","ok","Error","message","data","sigleNotaService","id","registerUserservice","email","password","method","headers","body","JSON","stringify","logInUserService","geyMyUserDataService","token","Authorization"],"sources":["/Users/usuario/Desktop/APP-Notes_Front/src/services/index.js"],"sourcesContent":["import { json } from \"react-router-dom\";\n\nexport const getAllNotasService = async () => {\n  const response = await fetch(`${process.env.REACT_APP_BACK}/notes`);\n  const json = await response.json();\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};\n\nexport const sigleNotaService = async (id) => {\n  const response = await fetch(`${process.env.REACT_APP_BACK}/notes/${id}`);\n  const json = await response.json;\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n  return json.data;\n};\n\nexport const registerUserservice = async ({ email, password }) => {\n  const response = await fetch(`${process.env.REACT_APP_BACK}/users`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ email, password }),\n  });\n  const json = await response.json();\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n};\n\n//error 404 not found al meter un user que existe o nuevo\n\nexport const logInUserService = async ({ email, password }) => {\n  const response = await fetch(`${process.env.REACT_APP_BACK}/login`, {\n    method: \"POST\",\n    body: JSON.stringify({ email, password }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\n  const json = await response.json();\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n  return json.data;\n};\n\nexport const geyMyUserDataService = async ({ token }) => {\n  const response = await fetch(`${process.env.REACT_APP_BACK}/users`, {\n    headers: {\n      Authorization: token,\n    },\n  });\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n  return json.data;\n};\n\n//Línea 2 (`${process.env.REACT_APP_BACK}/notes`)\n\n//mod\n//const response = await fetch(`${process.env.REACT_APP_BACK}/users`,\n//`${process.env.REACT_APP_BACKEND}/user/${id}/tweets`\n"],"mappings":"AAAA,SAASA,IAAT,QAAqB,kBAArB;AAEA,OAAO,MAAMC,kBAAkB,GAAG,YAAY;EAC5C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,cAAe,QAA/B,CAA5B;EACA,MAAMN,IAAI,GAAG,MAAME,QAAQ,CAACF,IAAT,EAAnB;;EACA,IAAI,CAACE,QAAQ,CAACK,EAAd,EAAkB;IAChB,MAAM,IAAIC,KAAJ,CAAUR,IAAI,CAACS,OAAf,CAAN;EACD;;EAED,OAAOT,IAAI,CAACU,IAAZ;AACD,CARM;AAUP,OAAO,MAAMC,gBAAgB,GAAG,MAAOC,EAAP,IAAc;EAC5C,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,cAAe,UAASM,EAAG,EAA3C,CAA5B;EACA,MAAMZ,IAAI,GAAG,MAAME,QAAQ,CAACF,IAA5B;;EACA,IAAI,CAACE,QAAQ,CAACK,EAAd,EAAkB;IAChB,MAAM,IAAIC,KAAJ,CAAUR,IAAI,CAACS,OAAf,CAAN;EACD;;EACD,OAAOT,IAAI,CAACU,IAAZ;AACD,CAPM;AASP,OAAO,MAAMG,mBAAmB,GAAG,cAA+B;EAAA,IAAxB;IAAEC,KAAF;IAASC;EAAT,CAAwB;EAChE,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,cAAe,QAA/B,EAAwC;IAClEU,MAAM,EAAE,MAD0D;IAElEC,OAAO,EAAE;MACP,gBAAgB;IADT,CAFyD;IAKlEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAEN,KAAF;MAASC;IAAT,CAAf;EAL4D,CAAxC,CAA5B;EAOA,MAAMf,IAAI,GAAG,MAAME,QAAQ,CAACF,IAAT,EAAnB;;EACA,IAAI,CAACE,QAAQ,CAACK,EAAd,EAAkB;IAChB,MAAM,IAAIC,KAAJ,CAAUR,IAAI,CAACS,OAAf,CAAN;EACD;AACF,CAZM,C,CAcP;;AAEA,OAAO,MAAMY,gBAAgB,GAAG,eAA+B;EAAA,IAAxB;IAAEP,KAAF;IAASC;EAAT,CAAwB;EAC7D,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,cAAe,QAA/B,EAAwC;IAClEU,MAAM,EAAE,MAD0D;IAElEE,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAEN,KAAF;MAASC;IAAT,CAAf,CAF4D;IAGlEE,OAAO,EAAE;MACP,gBAAgB;IADT;EAHyD,CAAxC,CAA5B;EAQA,MAAMjB,IAAI,GAAG,MAAME,QAAQ,CAACF,IAAT,EAAnB;;EACA,IAAI,CAACE,QAAQ,CAACK,EAAd,EAAkB;IAChB,MAAM,IAAIC,KAAJ,CAAUR,IAAI,CAACS,OAAf,CAAN;EACD;;EACD,OAAOT,IAAI,CAACU,IAAZ;AACD,CAdM;AAgBP,OAAO,MAAMY,oBAAoB,GAAG,eAAqB;EAAA,IAAd;IAAEC;EAAF,CAAc;EACvD,MAAMrB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,cAAe,QAA/B,EAAwC;IAClEW,OAAO,EAAE;MACPO,aAAa,EAAED;IADR;EADyD,CAAxC,CAA5B;EAKA,MAAMvB,IAAI,GAAG,MAAME,QAAQ,CAACF,IAAT,EAAnB;;EAEA,IAAI,CAACE,QAAQ,CAACK,EAAd,EAAkB;IAChB,MAAM,IAAIC,KAAJ,CAAUR,IAAI,CAACS,OAAf,CAAN;EACD;;EACD,OAAOT,IAAI,CAACU,IAAZ;AACD,CAZM,C,CAcP;AAEA;AACA;AACA"},"metadata":{},"sourceType":"module"}