{"ast":null,"code":"var _jsxFileName = \"/Users/usuario/Desktop/APP-Notes_Front/src/components/Nota.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { deleteNotaService } from \"../services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Nota = _ref => {\n  _s();\n\n  let {\n    notas,\n    removeNota\n  } = _ref;\n  const navigate = useNavigate();\n  const {\n    user,\n    token\n  } = useContext(AuthContext); //console.log(nota);\n  //console.log(user);\n\n  const [error, setError] = useState(\"\");\n\n  const deleteNota = async id => {\n    try {\n      await deleteNotaService({\n        id,\n        token\n      });\n\n      if (removeNota) {\n        removeNota(id);\n      } else {\n        navigate(\"/\");\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: notas.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), notas.image ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `${process.env.REACT_APP_BACK}/uploads/${notas.image}`,\n      alt: notas.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"By \", /*#__PURE__*/_jsxDEV(Link, {\n        to: `/users/${user.id}`,\n        children: [\" \", notas.email, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 12\n      }, this), \"on\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n        to: `/notes/${notas.id}`,\n        children: [\" \", new Date(notas.created_at).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [user && user.id === notas.user_id ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          if (window.confirm(\"¿Estás seguro?\")) deleteNota(notas.id);\n        },\n        children: [\"Borrar Nota\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this) : null, error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 18\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}; //ver uso horario\n//incluir confirmar borrado nota\n//const modifyNota= async(id)=>{\n//  try {\n//    await modifyNotaService ({id, token})\n//      modNota(id)\n//  } catch (error) {\n//    setError(error)\n//  }\n//}\n//<section>\n//{user && user.id === nota.user_id ? (\n//  <button onClick={() => modifyNota(nota.id)}>Borrar Nota </button>\n//) : null}\n//{error ? <p>{error}</p> : null}\n//</section>\n\n_s(Nota, \"1Xc0COwbrJ5QGJwD2QYXkyNw/I8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Nota;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nota\");","map":{"version":3,"names":["useContext","useState","useNavigate","Link","AuthContext","deleteNotaService","Nota","notas","removeNota","navigate","user","token","error","setError","deleteNota","id","message","text","image","process","env","REACT_APP_BACK","email","Date","created_at","toLocaleString","user_id","window","confirm"],"sources":["/Users/usuario/Desktop/APP-Notes_Front/src/components/Nota.js"],"sourcesContent":["import { useContext, useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { deleteNotaService } from \"../services\";\n\nexport const Nota = ({ notas, removeNota }) => {\n  const navigate = useNavigate();\n  const { user, token } = useContext(AuthContext);\n\n  //console.log(nota);\n  //console.log(user);\n  const [error, setError] = useState(\"\");\n\n  const deleteNota = async (id) => {\n    try {\n      await deleteNotaService({ id, token });\n      if (removeNota) {\n        removeNota(id);\n      } else {\n        navigate(\"/\");\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <article>\n      <p>{notas.text}</p>\n      {notas.image ? (\n        <img\n          src={`${process.env.REACT_APP_BACK}/uploads/${notas.image}`}\n          alt={notas.text}\n        />\n      ) : null}\n      <p>\n        By <Link to={`/users/${user.id}`}> {notas.email} </Link>\n        on{\" \"}\n        <Link to={`/notes/${notas.id}`}>\n          {\" \"}\n          {new Date(notas.created_at).toLocaleString()}\n        </Link>\n      </p>\n      <section>\n        {user && user.id === notas.user_id ? (\n          <button\n            onClick={() => {\n              if (window.confirm(\"¿Estás seguro?\")) deleteNota(notas.id);\n            }}\n          >\n            Borrar Nota{\" \"}\n          </button>\n        ) : null}\n        {error ? <p>{error}</p> : null}\n      </section>\n    </article>\n  );\n};\n//ver uso horario\n//incluir confirmar borrado nota\n//const modifyNota= async(id)=>{\n//  try {\n//    await modifyNotaService ({id, token})\n//      modNota(id)\n//  } catch (error) {\n//    setError(error)\n//  }\n//}\n\n//<section>\n//{user && user.id === nota.user_id ? (\n//  <button onClick={() => modifyNota(nota.id)}>Borrar Nota </button>\n//) : null}\n//{error ? <p>{error}</p> : null}\n//</section>\n"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,WAAT,EAAsBC,IAAtB,QAAkC,kBAAlC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,iBAAT,QAAkC,aAAlC;;AAEA,OAAO,MAAMC,IAAI,GAAG,QAA2B;EAAA;;EAAA,IAA1B;IAAEC,KAAF;IAASC;EAAT,CAA0B;EAC7C,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;EACA,MAAM;IAAEQ,IAAF;IAAQC;EAAR,IAAkBX,UAAU,CAACI,WAAD,CAAlC,CAF6C,CAI7C;EACA;;EACA,MAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;;EAEA,MAAMa,UAAU,GAAG,MAAOC,EAAP,IAAc;IAC/B,IAAI;MACF,MAAMV,iBAAiB,CAAC;QAAEU,EAAF;QAAMJ;MAAN,CAAD,CAAvB;;MACA,IAAIH,UAAJ,EAAgB;QACdA,UAAU,CAACO,EAAD,CAAV;MACD,CAFD,MAEO;QACLN,QAAQ,CAAC,GAAD,CAAR;MACD;IACF,CAPD,CAOE,OAAOG,KAAP,EAAc;MACdC,QAAQ,CAACD,KAAK,CAACI,OAAP,CAAR;IACD;EACF,CAXD;;EAaA,oBACE;IAAA,wBACE;MAAA,UAAIT,KAAK,CAACU;IAAV;MAAA;MAAA;MAAA;IAAA,QADF,EAEGV,KAAK,CAACW,KAAN,gBACC;MACE,GAAG,EAAG,GAAEC,OAAO,CAACC,GAAR,CAAYC,cAAe,YAAWd,KAAK,CAACW,KAAM,EAD5D;MAEE,GAAG,EAAEX,KAAK,CAACU;IAFb;MAAA;MAAA;MAAA;IAAA,QADD,GAKG,IAPN,eAQE;MAAA,+BACK,QAAC,IAAD;QAAM,EAAE,EAAG,UAASP,IAAI,CAACK,EAAG,EAA5B;QAAA,gBAAiCR,KAAK,CAACe,KAAvC;MAAA;QAAA;QAAA;QAAA;MAAA,QADL,QAEK,GAFL,eAGE,QAAC,IAAD;QAAM,EAAE,EAAG,UAASf,KAAK,CAACQ,EAAG,EAA7B;QAAA,WACG,GADH,EAEG,IAAIQ,IAAJ,CAAShB,KAAK,CAACiB,UAAf,EAA2BC,cAA3B,EAFH;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QARF,eAgBE;MAAA,WACGf,IAAI,IAAIA,IAAI,CAACK,EAAL,KAAYR,KAAK,CAACmB,OAA1B,gBACC;QACE,OAAO,EAAE,MAAM;UACb,IAAIC,MAAM,CAACC,OAAP,CAAe,gBAAf,CAAJ,EAAsCd,UAAU,CAACP,KAAK,CAACQ,EAAP,CAAV;QACvC,CAHH;QAAA,0BAKc,GALd;MAAA;QAAA;QAAA;QAAA;MAAA,QADD,GAQG,IATN,EAUGH,KAAK,gBAAG;QAAA,UAAIA;MAAJ;QAAA;QAAA;QAAA;MAAA,QAAH,GAAoB,IAV5B;IAAA;MAAA;MAAA;MAAA;IAAA,QAhBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA+BD,CApDM,C,CAqDP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;GArEaN,I;UACMJ,W;;;KADNI,I"},"metadata":{},"sourceType":"module"}